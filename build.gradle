plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.7'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.beyond'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

//	아래 의존성은 db연결 및 관리를 위한 의존성 : jdbc, mybatis, jpa
//	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
//	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

//	spring 웹서비스를 위한 기본 의존성 : web
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	getter, setter등의 자동생성 및 개발의 편의성을 증대시켜주는 의존성
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
//	테스트 코드 작성을 위한 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

//	서버단에서 화면을 만들어서 렌더링(화면을준다라는의미) 해주기 위한 기술 중 하나
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
}

tasks.named('test') {
	useJUnitPlatform()
}
